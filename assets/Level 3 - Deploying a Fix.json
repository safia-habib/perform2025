{"version":1,"defaultTimeframe":{"from":"now()-2h","to":"now()"},"defaultSegments":[],"sections":[{"id":"0","type":"markdown","markdown":"# Background\nOur IDP makes it easy to deploy new versions of our application.  By changing the application manifests in GitLab, ArgoCD will automatically sync the changes to our Kubernetes cluster and deploy the new release.  With Workflow automations and SDLC events in Dynatrace, we can automate the Site Reliability Guardian release validation and make sure any security objectives are passed.  Through integrations with Backstage and GitLab, we can see the result of our release validations in context of our tooling and configuration.\n\n![New Release](https://university.dynatrace.com/assets/50312/05_00_new_release.png)\n\n* Create a new branch on the GitLab repo\n* Create and submit a Merge Request with new version\n* Automatic release validation with Dynatrace\n\n# Objectives\nThe security team has approved several container images that should resolve our Node4Shell vulnerability.  You need to deploy a new release that uses the new container image and validate that your application is no longer vulnerable.\n\n## How will we deploy a new version?\nOur application is deployed based on the manifests in the GitLab repository.  By creating a new branch, making the necessary changes, and merging those changes with a merge request; ArgoCD will detect the changes and apply them to our Kubernetes cluster automatically.\n\n## What triggers the release validation automatically?\nWhen ArgoCD syncs the application deployment, an SDLC event with the context information is sent to Dynatrace.  This event is used as a trigger for the Workflow that executes the Site Reliability Guardian with our security objectives.  As a result, any time that our application is changed or updated, Dynatrace will automatically validate the security our application!\n\n## Where will our team see the result of the release validation?\nAny time the Site Reliability Guardian with our security objectives is executed, it will generate or store the result as an event.  This event is a trigger for another Workflow automation that will send the release validation results to the Backstage notification channel and to GitLab as a comment.  This way our team doesn't have to login to Dynatrace to see the results, we can see the information we need in the space that we're already working in.  Additionally, we can login to Dynatrace and view the results in the Site Reliability Guardian App; or in a Dashboard."},{"id":"15acd854-349d-4a61-8832-128bb0ca1531","type":"markdown","markdown":"### Security Approved Container Images\n\nThe security team approves of the following container images, as they have been deemed secure for this exercise.  \n\nChoose the correct one for your application.\n\n| Service | Image | Version/Tag | Language |\n| ------- | ----- | ----------- | -------- |\n| astronomy-shop frontend | astronomy-shop/demo | astronomy-shop/demo:1.10.0-frontend | Node.js\n| astronomy-shop paymentservice | astronomy-shop/demo | astronomy-shop/demo:1.10.0-paymentservice | Node.js\n| easytrade frontend | easytrade/frontend | easytrade/frontend:a9edfaf | Node.js\n| easytrade offerservice | easytrade/offerservice| easytrade/offerservice:a9edfaf | Node.js\n| simplenodeservice | popecruzdt/simplenodeservice | popecruzdt/simplenodeservice:1.0.1 | Node.js"},{"id":"1","type":"markdown","markdown":"\n## Step 1 - Create a New Branch\n\n![GitLab New Branch](https://university.dynatrace.com/assets/50312/05_01_gitlab_create_new_branch.png)\n*Screenshots are for reference and may not exactly match step objectives*\n\n1. From the Backstage component page, click `View Source` to open the GitLab repo\n\n2. Click on the `+` sign and choose `New branch` to create a new (code) branch on this repo\n\n![GitLab Name Branch](https://university.dynatrace.com/assets/50312/05_01_gitlab_branch_name.png)\n*Screenshots are for reference and may not exactly match step objectives*\n\n1. Give the branch a unique name based on your team identifier, i.e. `change_team01`\n\n2. You can now make code (configuration) modifications on this new branch\n\nUpdate the branch to use the new version by switching to the container image approved by the security team.\n\n#### Hint - Modify the Application Manifests\n\n![GitLab Version Change](https://university.dynatrace.com/assets/50312/05_01_gitlab_version_change.png)\n*Screenshots are for reference and may not exactly match step objectives*\n\nMake the following changes to the branch:\n\n1. In the `argoapp` directory, locate and edit the `app.yml` manifest.  Locate the `version` label spec and change it from `1.0.2` to `1.0.1`.  Click `Commit changes`.\n\n2. In the `manifests` directory, locate and edit the `rollout.yml` manifest.  Locate the `app.kubernetes.io/version` label spec and change it from `1.0.2` to `1.0.1`.  Locate the `image` container spec and change it from `grabnerandi/simplenodeservice:1.0.2` to `popecruzdt/simplenodeservice:1.0.1`.  Click `Commit changes`."},{"id":"2","type":"markdown","markdown":"\n## Step 2 - Create a Merge Request\n\n![GitLab Create Merge Request](https://university.dynatrace.com/assets/50312/05_01_gitlab_good_title.png)\n*Screenshots are for reference and may not exactly match step objectives*\n\n1. Now that the branch is changed, click on `Create merge request`\n\n2. Give the merge request a meaningful name and describe what you've changed\n\n3. Click on `Create merge request` to create a new merge request\n\n4. The merge request is ready to merge, click on `Merge` to merge the new branch with the main branch\n\n##### Automatic Deployment\n\nOnce the change is made in GitLab, ArgoCD will automatically sync the changes to the Kubernetes cluster (within 3-4 minutes).\n\nCheck and make sure that the new version was deployed successfully.\n\n#### Hint - Observe the Change\n\n![GitLab Merge Request ArgoCD](https://university.dynatrace.com/assets/50312/05_01_argocd_sync.png)\n*Screenshots are for reference and may not exactly match step objectives*\n\n1. Navigate to ArgoCD and locate your app.  ArgoCD will automatically trigger a sync when it detects a change to the source.  \n\nOptionally, you can click on `Refresh` or `Sync` to speed this up and trigger a new sync"},{"id":"3","type":"markdown","markdown":"\n### Step 3 - Automatic Release Validation\n\n![srg workflow automation execution](https://raw.githubusercontent.com/safia-habib/perform2025/main/images/srg_workflow_automation_execution.png)\n*Screenshots are for reference and may not exactly match step objectives*\n\n1. Open the SRG Workflow and check the execution\n\n2. Review the `Execution Context` and validate the execution aligns to the changes in your merge request\n\n![srg validation result pass](https://raw.githubusercontent.com/safia-habib/perform2025/main/images/srg_validation_result_pass.png)\n*Screenshots are for reference and may not exactly match step objectives*\n\n1. Open the SRG and check the latest validation\n\n2. Review the validation result and check if the validation passed\n\n![srg validation objectives pass](https://raw.githubusercontent.com/safia-habib/perform2025/main/images/srg_validation_objectives_pass.png)\n*Screenshots are for reference and may not exactly match step objectives*\n\n1. Review the validation objectives and locate the `Node4Shell` objective\n\n2. Validate that the objective passed, indicating that the critical vulnerability has been removed as a result of your change\n\n##### Release Validation Results \n\nWithin Dynatrace we can now easily validate that whenever we make a change or deploy a new version of our application, that our application is secure and doesn't have the Node4Shell vulnerability at runtime.\n\nThe Dynatrace Workflow automations send these results in context to our IDP tooling (GitLab, Backstage, etc.).  Can you locate the release validation results within the IDP tooling?\n\n#### Hint - Closed-loop Release Validation Feedback\n\n![Dynatrace Automation](https://university.dynatrace.com/assets/50312/05_01_dynatrace_automation.png)\n\n![srg validation objectives pass](https://raw.githubusercontent.com/safia-habib/perform2025/main/images/backstage_notification_release_validation_message.png)\n*Screenshots are for reference and may not exactly match step objectives*\n\n1. From Backstage, navigate to the Notifications page and switch to your team's channel.  As your application's new release progresses, Dynatrace will automatically post messages here.\n\n![srg validation objectives pass](https://raw.githubusercontent.com/safia-habib/perform2025/main/images/backstage_component_release_validation_result.png)\n*Screenshots are for reference and may not exactly match step objectives*\n\n2. On the Backstage component page, locate the `Dynatrace Validations` section.  Every time the automated release validation takes place, via the Site Reliability Guardian, Dynatrace will store the result and Backstage will display it here.\n\n![srg validation objectives pass](https://raw.githubusercontent.com/safia-habib/perform2025/main/images/gitlab_merge_request_release_validation_comment.png)\n*Screenshots are for reference and may not exactly match step objectives*\n\n3. In GitLab, navigate back to your merge request.  When the SRG release validation takes place, Dynatrace will post a message (comment) on the merge request that was submitted to deploy the new release that includes the validation result.\n\nIn Dynatrace, open the Platform Cockpit Dashboard and explore all Lifecycle events for your application\n\nValidate that your app is really deployed in the new version by browsing to the app. Get the link from Backstage, Argo or the Dynatrace dashboard"},{"id":"8c1cfb67-1391-46f9-b595-5af8d9d95942","type":"markdown","markdown":"## Recap\nIn this level, you have successfully:\n#\n1. Deployed a new application release using an approved container image using GitLab and ArgoCD\n2. Automated the security release validation objectives using SDLC events, Site Reliability Guardian, and Workflow automations in Dynatrace\n3. Easily found the release validation results within context of your IDP tooling in GitLab, Backstage, and Dynatrace"}]}